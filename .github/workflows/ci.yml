name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        pip install -r requirements.txt
    
    - name: Install Hathor dependencies (if available)
      run: |
        # Try to install Hathor packages from source or skip if not available
        pip install requests || echo "Hathor packages not available, using HTTP client fallback"
      continue-on-error: true
    
    - name: Run black formatting check
      run: black --check .
    
    - name: Run isort import sorting check
      run: isort --check-only .
    
    - name: Run flake8 linting
      run: flake8 . --count --statistics --max-line-length=100 --extend-ignore=E203,W503,F401,F541,E722,F841,W293

  test:
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Hathor dependencies (if available)
      run: |
        # Try to install Hathor packages from source or skip if not available
        pip install requests || echo "Hathor packages not available, using HTTP client fallback"
      continue-on-error: true
    
    - name: Run tests with coverage
      env:
        # Set test environment variables
        TWILIO_SID: test_sid
        TWILIO_TOKEN: test_token
        TWILIO_WHATSAPP_NUMBER: whatsapp:+1234567890
        OPENAI_API_KEY: test_openai_key
        HATHOR_NETWORK: testnet
        HATHOR_NODE_URL: https://node1.testnet.hathor.network
        HATHOR_WALLET_SEED: test_seed_phrase
        DEBUG: true
      run: |
        pytest --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
